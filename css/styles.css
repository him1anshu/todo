:root {
    /* Application Bar (Header & Footer) Background */
    --app-bar-bg: #2A3B4D;
    /* was --primary-color */

    /* Primary Button Background (e.g., Task Add, Create) */
    --btn-primary-bg: #1a76df;
    /* was --secondary-color */

    /* Accent / Interactive Color */
    --accent-color: #7FDBFF;

    /* Status: Success (e.g., Task Completed) */
    --status-success-color: #00C851;

    /* Button / Action: Danger Background (e.g., Clear Search, Cancel) */
    --btn-danger-bg: #e74b4b;
    /* was --warning-color */

    /* Page / Body Background */
    --body-bg: #eff1f3;
    /* was --background-light */

    /* Main Text Color */
    --text-main: #2A3B4D;
    /* was --text-primary */

    /* Alternate / Secondary Text Color */
    --text-alt: #6C757D;
    /* was --text-secondary */

    /* Border Color */
    --border-color: #E0E0E0;

    /* Surface Background (Forms, Modals, Inputs, Containers) */
    --surface-bg: #FFFFFF;
    /* was --white */

    /* Priority Colors */
    --priority-high-color: #e74c3c;
    /* was --priority-high */
    --priority-medium-color: #f39c12;
    /* was --priority-medium */
    --priority-low-color: #f1c40f;
    /* was --priority-low */

    /* Dropdown Icon Color */
    --dropdown-icon-color: #2c3e50;
    /* was --task-dropdown-color */

    /* Inverse Text Color (for dark backgrounds like header/footer) */
    --inverse-text-color: #fff;
    /* was --text-color-white */

    /* Status Badge Colors */
    --status-pending-bg: #FFF3CD;
    /* was --task-status-pending-bg */
    --status-completed-bg: #D4EDDA;
    /* was --task-status-completed-bg */
    --status-pending-text: #856404;
    /* was --task-status-pending-text */
    --status-completed-text: #155724;
    /* was --task-status-completed-text */

    /* Checkbox Default Background */
    --checkbox-default-bg: #ccc;
    /* was --checkbox-bg */

    /* Action Button Hover Color */
    --action-btn-hover-color: #222;
    /* was --task-actions-btn-color-hover */

    /* Main Shadow for Headers, Footers, etc. */
    --shadow-main: 0 2px 8px rgba(0, 0, 0, 0.1);
    /* light mode box-shadow */

    /* Due Date Colors */
    --duedate-invalid: #e74b4b;
    --duedate-valid: #2c3e50;
}

[data-theme="dark"] {
    --app-bar-bg: #1E272E;
    --btn-primary-bg: #00b894;
    --accent-color: #48C9B0;
    --status-success-color: #2ECC71;
    --btn-danger-bg: #E74C3C;
    --body-bg: #121212;
    --text-main: #ECF0F1;
    --text-alt: #bdc3c7;
    --border-color: #2c3e50;
    --surface-bg: #1C1C1C;
    /* optimized dark surface background */
    --priority-high-color: #ff6b6b;
    --priority-medium-color: #ff9f43;
    --priority-low-color: #feca57;
    --dropdown-icon-color: #ECF0F1;
    /* brighter for dark mode */
    --inverse-text-color: #fff;
    --status-pending-bg: rgba(255, 193, 7, 0.15);
    --status-completed-bg: rgba(40, 167, 69, 0.15);
    --status-pending-text: #ffc107;
    --status-completed-text: #28a745;
    --checkbox-default-bg: #444;
    /* darker checkbox background */
    --action-btn-hover-color: #fff;

    /* Subtler shadow for dark surfaces */
    --shadow-main: 0 2px 8px rgba(0, 0, 0, 0.3);

    /* Due Date Colors for better contrast in dark mode */
    --duedate-invalid: #fff;
    --duedate-valid: #bdc3c7;

    /* Override dropdown icon for dark mode */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='6'%3E%3Cpolygon points='0,0 10,0 5,6' fill='%23ffffff'/%3E%3C/svg%3E");
}

/* Dialog adjustments for dark mode */
[data-theme="dark"] .task-dialog h2 {
    color: #ffffff;
    /* ensures header text is clearly visible */
}

[data-theme="dark"] .task-dialog .btn-create {
    background-color: #008a75;
    /* muted teal for create button */
    color: #ffffff;
}

[data-theme="dark"] .task-dialog .btn-cancel {
    background-color: #c0392b;
    /* muted red for cancel button */
    color: #ffffff;
}

/* Reset & Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    user-select: none;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    touch-action: none;
}

body {
    font-family: 'Roboto', sans-serif;
    background-color: var(--body-bg);
    transition: background 0.3s ease, color 0.3s ease;
}

header {
    height: 70px;
    width: 100%;
    display: flex;
    justify-content: space-around;
    align-items: center;
    background-color: var(--app-bar-bg);
    box-shadow: var(--shadow-main);
}

nav {
    display: flex;
    align-items: center;
    width: 100%;
}

.nav-brand {
    text-align: center;
    justify-self: center;
    flex-grow: 1;
}

.toggle-theme {
    justify-self: end;
    margin-right: 1rem;
}

.toggle-theme button {
    background: none;
    border: none;
    color: var(--inverse-text-color);
    padding: 0.5rem;
    cursor: pointer;
    height: 3rem;
    width: 3rem;
    transition: all 0.3s ease-in-out;
}

.toggle-theme button:hover {
    transform: scale(1.2);
}

footer {
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--app-bar-bg);
    box-shadow: var(--shadow-main);
}

footer p {
    color: var(--inverse-text-color);
}

.nav-brand h1 {
    color: var(--inverse-text-color);
    font-weight: 300;
    font-size: 1.8rem;
}

#task-dashboard {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
    min-height: calc(100vh - 174px);
}

.controls-group {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
}

#task-search {
    flex: 1;
    position: relative;
    min-width: 250px;
}

/* Updated search bar styles with explicit text color */
#task-search input {
    width: 100%;
    padding: 0.8rem 2rem 0.8rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    font-size: 1rem;
    background-color: var(--surface-bg);
    color: var(--text-main);
}

/* Optional: placeholder text color */
#task-search input::placeholder {
    color: var(--text-alt);
}

#task-search-btn {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--text-alt);
}

.filter-group {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.task-dropdown {
    padding: 0.8rem 1rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background-color: var(--surface-bg);
    min-width: 150px;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    color: var(--text-main);
    outline: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='6'%3E%3Cpolygon points='0,0 10,0 5,6' fill='%232c3e50'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 10px auto;
}

/* Optionally override dropdown icon in dark theme */
[data-theme="dark"] .task-dropdown {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='6'%3E%3Cpolygon points='0,0 10,0 5,6' fill='%23ffffff'/%3E%3C/svg%3E");
}

.task-completed .task-title {
    text-decoration: line-through;
    opacity: 0.6;
}

.task-completed .edit-btn {
    pointer-events: none;
    opacity: 0.5;
    cursor: not-allowed;
}

.task-completed .priority-high::after,
.task-completed .priority-medium::after,
.task-completed .priority-low::after {
    content: "";
    display: none;
    animation: none;
}

.task-due-date:invalid {
    color: var(--duedate-invalid);
}

.task-due-date:valid {
    color: var(--duedate-valid);
}

.task-due-date::-webkit-calendar-picker-indicator {
    cursor: pointer;
    opacity: 0.9;
}

.task-due-date::-webkit-calendar-picker-indicator:hover {
    opacity: 1;
}

.dark-theme .task-due-date::-webkit-calendar-picker-indicator {
    filter: invert(1);
}

button {
    cursor: pointer;
}

#clear-search-btn {
    background: var(--btn-danger-bg);
    color: var(--inverse-text-color);
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

#task-add-btn {
    background: var(--btn-primary-bg);
    color: var(--inverse-text-color);
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    position: relative;
    overflow: hidden;
}

#task-add-btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(120deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: skewX(-30deg);
    animation: shine 1s ease-in-out infinite;
}

@keyframes shine {
    from {
        left: -100%;
    }

    to {
        left: 100%;
    }
}

#task-list {
    background: var(--surface-bg);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.task-item {
    display: grid;
    grid-template-columns: auto 1fr auto;
    gap: 1.5rem;
    padding: 1.5rem;
    border-bottom: 1px solid var(--border-color);
}

.task-item:last-child {
    border-bottom: none;
}

.task-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    z-index: 2;
}

.task-drag-container {
    display: flex;
    align-items: center;
    height: 1.5rem;
    cursor: grab;
}

.task-drag {
    height: 2px;
    width: 1.5rem;
    position: relative;
    border-radius: 4px;
    background-color: var(--text-alt);
}

.task-drag::before,
.task-drag::after {
    content: "";
    position: absolute;
    left: 0;
    width: 100%;
    height: 2px;
    border-radius: 4px;
    background-color: var(--text-alt);
}

.task-drag::before {
    top: -0.5rem;
}

.task-drag::after {
    top: 0.5rem;
}

.task-meta input[type=checkbox] {
    appearance: none;
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    background-color: var(--checkbox-default-bg);
    border: 2px solid var(--checkbox-default-bg);
    border-radius: 4px;
    cursor: pointer;
    display: grid;
    place-content: center;
}

input[type="checkbox"]::before {
    content: "";
    width: 12px;
    height: 12px;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em var(--surface-bg);
    border-radius: 4px;
    transform-origin: bottom left;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

input[type="checkbox"]:checked::before {
    transform: scale(1);
}

input[type="checkbox"]:hover,
input[type="checkbox"]:focus {
    outline: max(2px, 0.15em) solid var(--checkbox-default-bg);
    outline-offset: max(2px, 0.15em);
}

input[type="checkbox"]:disabled {
    --form-control-color: var(--app-bar-bg);
    color: var(--app-bar-bg);
    cursor: not-allowed;
}

.priority-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
}

.priority-high {
    background-color: var(--priority-high-color);
    position: relative;
}

.priority-medium {
    background-color: var(--priority-medium-color);
    position: relative;
}

.priority-low {
    background-color: var(--priority-low-color);
    position: relative;
}

.priority-high::after,
.priority-medium::after,
.priority-low::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: 50%;
    z-index: -1;
    animation: pulse 0.5s cubic-bezier(0.9, 0.7, 0.5, 0.9) infinite;
}

.priority-high::after {
    background-color: var(--priority-high-color);
    animation: pulse .5s cubic-bezier(0.9, 0.7, 0.5, 0.9) infinite;
}

.priority-medium::after {
    background-color: var(--priority-medium-color);
    animation: pulse 1s cubic-bezier(0.9, 0.7, 0.5, 0.9) infinite;
}

.priority-low::after {
    background-color: var(--priority-low-color);
    animation: pulse 1.5s cubic-bezier(0.9, 0.7, 0.5, 0.9) infinite;
}

@keyframes pulse {
    0% {
        transform: scale(0);
        opacity: 0;
    }

    50% {
        transform: scale(1.6);
        opacity: 0.4;
    }
}

.task-content {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    overflow: hidden;
}

.task-title {
    width: inherit;
    font-weight: 500;
    color: var(--text-main);
    white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
}

.task-details {
    display: flex;
    gap: 1rem;
    align-items: center;
    color: var(--text-alt);
}

.due-date {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.status-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.85rem;
}

.status-completed {
    background: var(--status-completed-bg);
    color: var(--status-completed-text);
}

.status-pending {
    background: var(--status-pending-bg);
    color: var(--status-pending-text);
}

.task-actions {
    display: flex;
    gap: 0.75rem;
}

.task-actions button {
    background: none;
    border: none;
    color: var(--text-alt);
    padding: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.task-actions button:hover {
    color: var(--action-btn-hover-color);
    transform: scale(1.2);
}

.task-dialog {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: none;
    border-radius: 12px;
    padding: 2rem;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    background: var(--surface-bg);
}

dialog::backdrop {
    /* background: rgba(0, 0, 0, 0.3); */
    backdrop-filter: blur(4px);
}

form h2 {
    text-align: center;
    margin-bottom: 0.5rem;
}

.form-element {
    margin-bottom: 1.5rem;
}

.form-element label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-main);
    font-weight: 500;
}

.form-element input,
.form-element select,
.form-element textarea {
    width: 100%;
    padding: 0.8rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    font-size: 1rem;
    background-color: var(--surface-bg);
    color: var(--text-main);
}

textarea {
    resize: none;
}

.form-element input[readonly], textarea[readonly],
select[disabled] {
    cursor: not-allowed;
}

.form-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    margin-top: 2rem;
}

.btn-create,
.btn-cancel {
    border: none;
    border-radius: 8px;
    outline: none;
    padding: 0.5rem 1rem;
}

.btn-create {
    color: var(--inverse-text-color);
    background-color: var(--btn-primary-bg);
}

.btn-cancel {
    color: var(--inverse-text-color);
    background-color: var(--btn-danger-bg);
}

@media (max-width: 900px) {
    .nav-brand {
        text-align: left;
        justify-self: flex-start;
        flex-grow: 1;
        margin-left: 1rem;
    }

    .controls-group {
        flex-direction: column;
    }

    #task-search,
    .filter-group {
        width: 100%;
        flex-wrap: wrap;
    }

    .filter-group .task-dropdown {
        flex: 1;
    }

   .task-item {
       grid-template-columns: 1fr 1fr;
       grid-template-rows: auto auto;
       gap: 1rem;
   }

   .task-item> :nth-child(1),
   .task-item> :nth-child(3) {
       display: flex;
       align-items: center;
   }

   .task-item> :nth-child(1) {
       order: 1;
   }

   .task-item> :nth-child(3) {
       order: 1;
       margin-left: auto;
   }

   .task-item> :nth-child(2) {
       order: 2;
       grid-column: span 2;
   }
}

@media (max-width: 470px) {
    .filter-group button {
        flex: 1;
    }
}

.task-dialog,
.task-dialog::backdrop {
    animation: pop 1s ease-in-out;
}

@keyframes pop {
    0% {
        opacity: 0;
    }

    50% {
        opacity: 1;
    }
}


#context-menu {
    position: absolute;
    background: white;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    padding: 8px 0;
    min-width: 150px;
    z-index: 1000;
}

#context-menu.hidden {
    display: none;
}

#context-menu li {
    list-style: none;
    padding: 8px 12px;
    cursor: pointer;
    transition: background 0.2s;
}

#context-menu li:hover {
    background: #f0f0f0;
}

#context-menu .disabled {
    color: gray;
    cursor: not-allowed;
}


#context-menu li.selected {
    background: #f0f0f0;
}